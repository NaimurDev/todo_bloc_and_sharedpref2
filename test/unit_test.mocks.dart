// Mocks generated by Mockito 5.4.4 from annotations
// in todo_list_app/test/unit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_list_app/features/todo/domain/model/Todo.dart' as _i4;

import 'unit_test.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TodoRepoTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodoRepoTest extends _i1.Mock implements _i2.TodoRepoTest {
  MockTodoRepoTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Todo>> initialSetFunc() => (super.noSuchMethod(
        Invocation.method(
          #initialSetFunc,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Todo>>.value(<_i4.Todo>[]),
      ) as _i3.Future<List<_i4.Todo>>);

  @override
  _i3.Future<void> addTodo(
    String? todoTitle,
    String? todoDesc,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTodo,
          [
            todoTitle,
            todoDesc,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteTodo(int? i) => (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [i],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> toggleDone(int? index) => (super.noSuchMethod(
        Invocation.method(
          #toggleDone,
          [index],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
